#include <iostream>
#include "actuator.h"

using namespace std;


int main(void)
{
	/*
		act_id 1,
		mode1 4,
		mode2 7,
		assign_id 15,
		port_mask 2,
		label "Parameter Label",
		val 1,
		min 2,
		max 3,
		def -21,
		steps1 55,
		steps2 0,
		unit "Parameter Unit",
		sp_count 3,

		Scale Points
		[0] Hello :101;
		[1] Hello :111;
		[2] Hello :121;

	*/

	const uint8_t msg[] = {0x04, 0x07, 0x0f, 0x02, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0xa8, 0xc1, 0x37, 0x00, 0x0e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x03, 0x09, 0x5b, 0x30, 0x5d, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x00, 0x00, 0xca, 0x42, 0x09, 0x5b, 0x31, 0x5d, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x00, 0x00, 0xde, 0x42, 0x09, 0x5b, 0x32, 0x5d, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x00, 0x00, 0xf2, 0x42, 0x7a};


	/*
		act_id 1,
		mode1 2,
		mode2 4,
		assign_id 19,
		port_mask 4,
		label "2 Label PARAM",
		val 21,
		min 22,
		max 33,
		def -221,
		steps1 33,
		steps2 0,
		unit "2 Unit PARAM",
		sp_count 4,

		Scale Points
		[0] Scale Point : 101;
		[1] Scale Point : 111;
		[2] Scale Point : 121;
		[3] Scale Point : 131;
		[4] Scale Point : 141;
	*/

	const uint8_t msg2[] = {0x02, 0x04, 0x13, 0x04, 0x0d, 0x32, 0x20, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x00, 0x00, 0xa8, 0x41, 0x00, 0x00, 0xb0, 0x41, 0x00, 0x00, 0x04, 0x42, 0x00, 0x00, 0x5d, 0xc3, 0x21, 0x00, 0x0c, 0x32, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x05, 0x0f, 0x5b, 0x30, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xca, 0x42, 0x0f, 0x5b, 0x31, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xde, 0x42, 0x0f, 0x5b, 0x32, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xf2, 0x42, 0x0f, 0x5b, 0x33, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0x03, 0x43, 0x0f, 0x5b, 0x34, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0x0d, 0x43, 0x74};
	const uint8_t msg3[] = {0x02, 0x04, 0x14, 0x04, 0x0d, 0x32, 0x20, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x00, 0x00, 0xa8, 0x41, 0x00, 0x00, 0xb0, 0x41, 0x00, 0x00, 0x04, 0x42, 0x00, 0x00, 0x5d, 0xc3, 0x21, 0x00, 0x0c, 0x32, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x05, 0x0f, 0x5b, 0x30, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xca, 0x42, 0x0f, 0x5b, 0x31, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xde, 0x42, 0x0f, 0x5b, 0x32, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xf2, 0x42, 0x0f, 0x5b, 0x33, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0x03, 0x43, 0x0f, 0x5b, 0x34, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0x0d, 0x43, 0x74};
	const uint8_t msg4[] = {0x02, 0x04, 0x15, 0x04, 0x0d, 0x32, 0x20, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x00, 0x00, 0xa8, 0x41, 0x00, 0x00, 0xb0, 0x41, 0x00, 0x00, 0x04, 0x42, 0x00, 0x00, 0x5d, 0xc3, 0x21, 0x00, 0x0c, 0x32, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x05, 0x0f, 0x5b, 0x30, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xca, 0x42, 0x0f, 0x5b, 0x31, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xde, 0x42, 0x0f, 0x5b, 0x32, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0xf2, 0x42, 0x0f, 0x5b, 0x33, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0x03, 0x43, 0x0f, 0x5b, 0x34, 0x5d, 0x20, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x00, 0x0d, 0x43, 0x74};


	Actuator act("Knob"/*name*/,
					 1 /* id*/,
					 4 /* num_assignments*/,
					 2 /* modes_total_count*/,
					 2 /* steps_total_count*/,
					 2 /* visual_output_level*/);

	if(act.assign(msg)){
		cout << "assign um" << endl << endl;
	}
	if(act.assign(msg2)){
		cout << "assign dois" << endl << endl;
	}
	if(act.assign(msg3)){
		cout << "assign tres" << endl << endl;
	}
	if(act.assign(msg4)){
		cout << "assign quatro" << endl << endl;
	}
	if(act.unassign(12)){
		cout << "unassign dois" << endl << endl;
	}
	if(act.unassign(15)){
		cout << "unassign um" << endl << endl;
	}
	if(act.assign(msg3)){
		cout << "reassign tres" << endl << endl;
	}
	if(act.assign(msg)){
		cout << "reassign um" << endl << endl;
	}

    return 0;
}

